---
# tasks file for nvim-configuration

- name: create the neovim conf dir
  ansible.builtin.file:
    path: "{{ (ansible_user_dir, nvim_config_dir) | path_join }}"
    state: directory
    mode: '0755'

- name: copy the neovim config file to the correct dir
  ansible.builtin.template:
    src: "{{ nvim_config_file }}"
    dest: "{{ (ansible_user_dir, nvim_config_dir, nvim_config_file | basename ) | path_join }}"
    mode: u+r-wx
  with_first_found:
    - files:
        # allows for specific configs per host
        - "init_{{ ansible_hostname }}.vim"
        - "init.vim"
  loop_control:
    loop_var: nvim_config_file

- name: create the neovim plugin folder
  ansible.builtin.file:
    path: "{{ (ansible_user_dir, nvim_config_dir, 'bundle') | path_join }}"
    state: directory
    mode: '0755'

- name: install vundle
  ansible.builtin.git:
    repo: "https://github.com/VundleVim/Vundle.vim.git"
    dest: "{{ (ansible_user_dir, nvim_config_dir, 'bundle', 'Vundle.vim') | path_join }}"
    update: false
    accept_hostkey: true

- name: create the neovim plugin file
  ansible.builtin.template:
    src: "plugins.j2"
    dest: "{{ (ansible_user_dir, nvim_config_dir, nvim_plugin_file) | path_join }}"
    mode: u+r-wx
  notify:
    - plugin_install

- name: copy the latexmkrc
  copy:
    src: latexmkrc
    dest: "{{ (ansible_user_dir, '.latexmkrc' ) | path_join }}"
    mode: u+r-wx

- name: copy the hugo script
  copy:
    src: serve-hugo-locally.sh
    dest: "{{ (ansible_user_dir, nvim_config_dir, 'serve-hugo-locally.sh' ) | path_join }}"
    mode: u+rx-w
